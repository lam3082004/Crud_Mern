var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
var ThumbsDown = function (_a) {
    var _b = _a.size, size = _b === void 0 ? 20 : _b, _c = _a.stroke, stroke = _c === void 0 ? 'currentColor' : _c, rest = __rest(_a, ["size", "stroke"]);
    return (React.createElement(React.Fragment, null,
        React.createElement("svg", __assign({ width: size, height: size, viewBox: "0 0 24 24", fill: "none", stroke: stroke, strokeWidth: 1.5, strokeLinecap: "round", strokeLinejoin: "round", className: "thumbs-down_svg__feather thumbs-down_svg__feather-thumbs-down" }, rest),
            React.createElement("path", { d: "M10 15v4a3 3 0 003 3l4-9V2H5.72a2 2 0 00-2 1.7l-1.38 9a2 2 0 002 2.3zm7-13h2.67A2.31 2.31 0 0122 4v7a2.31 2.31 0 01-2.33 2H17" }))));
};
export default React.memo(ThumbsDown);
